{"version":3,"sources":["redux/constants/post.constants.js","redux/services/post.service.js","redux/actions/post.actions.js","components/posts/PostCard.jsx","components/posts/PostDetails.jsx","components/posts/PostList.jsx","components/common/header/Header.jsx","components/common/footer/Footer.jsx","App.js","redux/reducers/postReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["postConstants","postService","getPosts","axios","get","then","response","status","console","log","data","children","handleResponse","postActions","dispatch","type","payload","postsData","error","fetchPostsFailure","PostCard","props","post","activePostID","className","id","onClick","onSelection","name","display_name","PostDetails","banner_background_image","src","alt","height","width","description","connectedPostList","connect","state","postReducer","useState","selectedPost","setSelectedPost","firstPost","useEffect","length","map","p","i","key","tPost","thisPost","Header","Footer","Date","getFullYear","App","initialState","loading","action","message","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.baacef89.chunk.js","sourcesContent":["export const postConstants = {\n  FETCH_POSTS_BEGIN: \"FETCH_POSTS_BEGIN\",\n  FETCH_POSTS_SUCCESS: \"FETCH_POSTS_SUCCESS\",\n  FETCH_POSTS_FAILURE: \"FETCH_POSTS_FAILURE\",\n};\n","import axios from \"axios\";\nconst BASE_URL = \"https://www.reddit.com/subreddits/popular.json?raw_json=1\";\n\nfunction getPosts() {\n  return axios.get(BASE_URL).then((response) => handleResponse(response));\n}\nfunction handleResponse(response) {\n  // console.log(\"handleResponse :: response \", response);\n  if (response.status !== 200) {\n    console.log(\"PostSerive :: API ERROR  \");\n  }\n  return response.data.data.children;\n}\n\nexport const postService = {\n  getPosts,\n};\n","import { postConstants } from \"../constants\";\nimport { postService } from \"../services\";\n\nconst fetchPostsBegin = () => ({\n  type: postConstants.FETCH_POSTS_BEGIN,\n});\n\nconst fetchPostsSuccess = (postsData) => ({\n  type: postConstants.FETCH_POSTS_SUCCESS,\n  payload: { postsData },\n});\n\nconst fetchPostsFailure = (error) => ({\n  type: postConstants.FETCH_POSTS_FAILURE,\n  payload: { error },\n});\n\nfunction getPosts() {\n  return (dispatch) => {\n    dispatch(fetchPostsBegin());\n    postService.getPosts().then(\n      (data) => dispatch(fetchPostsSuccess(data)),\n      (error) => dispatch(fetchPostsFailure(error))\n    );\n  };\n}\n\nexport const postActions = {\n  getPosts,\n};\n","import React from \"react\";\n\nconst PostCard = (props) => {\n  const { post, activePostID } = props;\n  const data = post.data;\n\n  const onClickHandler = () => {\n    props.onSelection(data);\n  };\n\n  // className={\n  //   link.className +\n  //   (data.id === activePost.id ? \" activeCard\" : \"\")\n  // }\n  // className={\"postCard \" + (activePostID === data.id) ? \"activdeCard\" : \"\"}\n\n  return (\n    <div\n      className={activePostID === data.id ? \"postCard activeCard\" : \"postCard\"}\n      onClick={onClickHandler}\n    >\n      <div className=\"cardBody\">\n        <div>\n          <label>ID : </label>\n          {data.id}\n        </div>\n        <div>\n          <label>Name : </label>\n          {data.name}\n        </div>\n        <div>\n          <label>Display Name : </label>\n          {data.display_name}\n        </div>\n        {/* \n        <img\n          className={data.banner_background_image ? \"postImg\" : \"hide\"}\n          src={data.banner_background_image}\n          alt=\"post bg\"\n          height=\"142\"\n          width=\"142\"\n        ></img> */}\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nconst PostDetails = (props) => {\n  const { post } = props;\n  return (\n    <div className=\"postDetails\">\n      <div className=\"detailHeader\">\n        <div className=\"postName\">{post.name}</div>\n      </div>\n      <div className=\"detailBody\">\n        <img\n          className={post.banner_background_image ? \"postImg\" : \"hide\"}\n          src={post.banner_background_image}\n          alt=\"post bg\"\n          height=\"142\"\n          width=\"142\"\n        ></img>\n\n        <div className=\"postDesc\">{post.description}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostDetails;\n","import React, { useEffect, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { postActions } from \"../../redux/actions\";\nimport PostCard from \"./PostCard\";\nimport PostDetails from \"./PostDetails\";\n\nimport \"./css/post.css\";\n\nconst PostList = (props) => {\n  const { getPosts, postsData } = props;\n\n  const [selectedPost, setSelectedPost] = useState({});\n  let firstPost = postsData[0] && postsData[0].data;\n  console.log(\" :: pfirstPost : \", firstPost);\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  const onSelectHandler = (thisPost) => {\n    console.log(\"PostList ::onSelectHandler thisPost : \", thisPost);\n    setSelectedPost(thisPost);\n  };\n  return (\n    <div className=\"postList\">\n      <div className=\"scrollArea\">\n        {postsData &&\n          postsData.length > 0 &&\n          postsData.map((p, i) => (\n            <PostCard\n              key={i}\n              post={p}\n              activePostID={\n                selectedPost ? selectedPost.id : postsData[0].data.id\n              }\n              onSelection={(tPost) => onSelectHandler(tPost)}\n            />\n          ))}\n      </div>\n      <div className=\"postDetailWrapper\">\n        <PostDetails post={selectedPost} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.postReducer.postsData,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: () => dispatch(postActions.getPosts()),\n  };\n};\n\nconst connectedPostList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostList);\nexport default connectedPostList;\n","import React from \"react\";\nimport \"../css/common.css\";\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Service Channel - Project</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div>\n        Service Channel - Project\n        <span>&#169; {new Date().getFullYear()}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport { HashRouter } from \"react-router-dom\";\nimport PostList from \"./components/posts/PostList\";\nimport Header from \"./components/common/header/Header\";\nimport Footer from \"./components/common/footer/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"appContainer\">\n        <Header />\n        <PostList />\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { postConstants } from \"../constants\";\n\nconst initialState = {\n  postsData: [],\n  loading: false,\n  error: {},\n};\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case postConstants.FETCH_POSTS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case postConstants.FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        postsData: action.payload.postsData,\n      };\n    case postConstants.FETCH_POSTS_FAILURE:\n      console.log(\" FETCH_POSTS_FAILURE :: payload : \", action.payload.error);\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error.message,\n        postsData: [],\n      };\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default postReducer;\n","import { combineReducers } from \"redux\";\nimport postReducer from \"./postReducer\";\n\nconst rootReducer = combineReducers({\n  postReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}